trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'release'
  #ImageName: 'kiranjagz/shapes-api:$(Build.BuildId)'
  ImageName: 'kiranjagz/shapes-api:latest'

stages:
  - stage: 'build'
    displayName: 'build_and_test'
    jobs: 
    - job: 'build_and_test'
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'dotnet restore'
        inputs:
          command: 'restore'
          feedsToUse: 'select'
          feedRestore: 'bobbi-force/bobbi-force'
          projects: '**/*.csproj'
          includeNuGetOrg: true

      - task: DotNetCoreCLI@2
        displayName: 'dotnet build'
        inputs:
          command: 'build'
          arguments: '--configuration $(buildConfiguration)'
          projects: '**/*.csproj'
          
      - task: DotNetCoreCLI@2
        displayName: 'dotnet test'
        inputs:
          command: 'test'
          projects: 'src/Shapes.Test/Shapes.Test.csproj'


  - stage: 'docker'
    displayName: 'build_and_push_docker_image'
    jobs:
    - job: 'build_and_push_docker_image'
      steps:
      - task: Docker@1     
        displayName: 'build docker image'
        inputs:
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'Docker Hub'
          command: 'Build an image'
          dockerFile: 'Dockerfile'
          arguments: '--build-arg BuildId=$(Build.BuildId) --build-arg PAT=$(System.AccessToken)'
          imageName: '$(ImageName)'
          includeLatestTag: true
          useDefaultContext: false
          buildContext: '.'

      - task: Docker@1
        displayName: 'push docker image'
        inputs:
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'Docker Hub'
          command: 'Push an image'
          imageName: '$(ImageName)'
         #condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))